y = c(y1, y2, y3),
class = rep(c("A", "B", "C"), each = 200))
## 绘图
ggscatterhist(
data = data,
x = "x",
y = "y",
shape = 21,
color = "black",
fill = "class",
palette = c("#00AFBB", "#E7B800", "#FC4E07")
)
ggscatterhist(
data = data,
x = "x",
y = "y",
shape = 21,
color = "black",
fill = "class",
palette = c("#00AFBB", "#E7B800", "#FC4E07"),
margin.plot = "boxplot",
margin.params = list(alpha = 0.5, fill = "class", color = "black"),
ggtheme = theme_minimal()，
)
ggscatterhist(
data = data,
x = "x",
y = "y",
shape = 21,
color = "black",
fill = "class",
palette = c("#00AFBB", "#E7B800", "#FC4E07"),
margin.plot = "boxplot",
margin.params = list(alpha = 0.5, fill = "class", color = "black"),
ggtheme = theme_minimal()，
xlab = FALSE,  ## 取消标签
ylab = FALSE,
title = "A scatterhist plot"
)
library(tidyverse)
df <- read_csv("data/Slopecharts_Data1.csv")
df
ggplot(df) +
geom_segment(x = 1, y = `1970`,
xend = 2, y = `1979`)
ggplot(df) +
geom_segment(x = 1, y = `1970`,
xend = 2, yend = `1979`)
ggplot(df) +
geom_segment(aes(x = 1, y = `1970`,
xend = 2, yend = `1979`))
library(ggalt)
ggplot(df) +
geom_segment(aes(x = 1, y = `1970`,
xend = 2, yend = `1979`)) +
geom_vline(xintercept = 1, linetype = "solid", size = 0.1)
library(ggalt)
ggplot(df) +
geom_segment(aes(x = 1, y = `1970`,
xend = 2, yend = `1979`)) +
geom_vline(xintercept = 1, linetype = "solid", size = 0.1) +
geom_vline(xintercept = 2, linetype = "solid", size = 0.1) +
geom_point(aes(1, `1970`))
library(ggalt)
ggplot(df) +
geom_segment(aes(x = 1, y = `1970`,
xend = 2, yend = `1979`)) +
geom_vline(xintercept = 1, linetype = "solid", size = 0.1) +
geom_vline(xintercept = 2, linetype = "solid", size = 0.1) +
geom_point(aes(1, `1970`)) +
geom_point(aes(2, `1979`))
library(ggalt)
ggplot(df) +
geom_xspline(aes(x = 1, y = `1970`,
xend = 2, yend = `1979`)) +
geom_vline(xintercept = 1, linetype = "solid", size = 0.1) +
geom_vline(xintercept = 2, linetype = "solid", size = 0.1) +
geom_point(aes(1, `1970`)) +
geom_point(aes(2, `1979`)) +
library(ggalt)
ggplot(df) +
geom_xspline(aes(x = 1, y = `1970`,
xend = 2, yend = `1979`)) +
geom_vline(xintercept = 1, linetype = "solid", size = 0.1) +
geom_vline(xintercept = 2, linetype = "solid", size = 0.1) +
geom_point(aes(1, `1970`)) +
geom_point(aes(2, `1979`))
library(ggalt)
ggplot(df) +
geom_xspline(aes(x = 1, y = `1970`,
xend = 2, yend = `1979`), size = 0.75) +
geom_vline(xintercept = 1, linetype = "solid", size = 0.1) +
geom_vline(xintercept = 2, linetype = "solid", size = 0.1) +
geom_point(aes(1, `1970`)) +
geom_point(aes(2, `1979`))
library(tidyverse)
install.packages("ggdark")
nrow(diamonds)
diamonds_sub <- diamonds[sample(nrow(diamonds), 5000), ]
p <- ggplot(diamonds_sub) +
geom_point(aes(carat, price, color = cut)) +
scale_y_continuous(label = scales::dollar) +
guides(color = guide_legend(reverse = TRUE)) +
labs(title = "Prices of 50,000 round cut diamonds by carat and cut",
x = "Weight (carats)",
y = "Price in US dollars",
color = "Quality of the cut")
p_dark <- p + dark_theme_gray()
library(tidyverse)
library(ggdark)
diamonds_sub <- diamonds[sample(nrow(diamonds), 5000), ]
p <- ggplot(diamonds_sub) +
geom_point(aes(carat, price, color = cut)) +
scale_y_continuous(label = scales::dollar) +
guides(color = guide_legend(reverse = TRUE)) +
labs(title = "Prices of 50,000 round cut diamonds by carat and cut",
x = "Weight (carats)",
y = "Price in US dollars",
color = "Quality of the cut")
p_dark <- p + dark_theme_gray()
diamonds_sub <- diamonds[sample(nrow(diamonds), 5000), ]
p <- ggplot(diamonds_sub) +
geom_point(aes(carat, price, color = cut)) +
scale_y_continuous(label = scales::dollar) +
guides(color = guide_legend(reverse = TRUE)) +
labs(title = "Prices of 50,000 round cut diamonds by carat and cut",
x = "Weight (carats)",
y = "Price in US dollars",
color = "Quality of the cut")
p_dark <- p + dark_theme_gray()
library(tidyverse)
library(ggdark)
library(ggpubr)
diamonds_sub <- diamonds[sample(nrow(diamonds), 5000), ]
p <- ggplot(diamonds_sub) +
geom_point(aes(carat, price, color = cut)) +
scale_y_continuous(label = scales::dollar) +
guides(color = guide_legend(reverse = TRUE)) +
labs(title = "Prices of 50,000 round cut diamonds by carat and cut",
x = "Weight (carats)",
y = "Price in US dollars",
color = "Quality of the cut")
p_dark <- p + dark_theme_gray()
ggarrange(p, d_dark, ncol = 1, nrow = 1)
diamonds_sub <- diamonds[sample(nrow(diamonds), 5000), ]
p <- ggplot(diamonds_sub) +
geom_point(aes(carat, price, color = cut)) +
scale_y_continuous(label = scales::dollar) +
guides(color = guide_legend(reverse = TRUE)) +
labs(title = "Prices of 50,000 round cut diamonds by carat and cut",
x = "Weight (carats)",
y = "Price in US dollars",
color = "Quality of the cut")
p_dark <- p + dark_theme_gray()
ggarrange(p, p_dark, ncol = 1, nrow = 1)
p_dark +
theme(
plot.background = element_black()
)
p_dark +
theme(
plot.background = element_blank()
)
p_dark +
theme(
plot.background = element_blank(fill = "gray10")
)
p_dark +
theme(
plot.background = element_blank(fill = "grey10")
)
p_dark +
theme(
plot.background = element_rect(fill = "grey10")
)
p_dark +
theme(
plot.title = element_text(family = "Fira Sans Condensed")
plot.background = element_rect(fill = "grey10")
p_dark +
theme(
plot.title = element_text(family = "Fira Sans Condensed"),
plot.background = element_rect(fill = "grey10")
)
p_dark +
theme(
plot.background = element_rect(fill = "grey10"),
panel.background = element_rect(fill = "grey30")
)
p_dark +
theme(
plot.background = element_rect(fill = "grey10"),
panel.background = element_rect(fill = "grey30"),
panel.grid = element_rect()
)
p_dark +
theme(
plot.background = element_rect(fill = "grey10"),
panel.background = element_rect(fill = "grey30"),
panel.grid.major =  = element_rect()
p_dark +
theme(
plot.background = element_rect(fill = "grey10"),
panel.background = element_rect(fill = "grey30"),
panel.grid.major = element_rect()
)
p_dark +
theme(
plot.background = element_rect(fill = "grey10"),
panel.background = element_rect(fill = "grey30"),
panel.grid = element_blank()
)
p_dark +
theme(
plot.background = element_rect(fill = "grey10"),
panel.background = element_rect(fill = "grey30"),
panel.grid.minor = element_line(color = "grey30", size = 0.2),
legend.background = element_blank(),
axis.ticks = element_blank(),
legend.key = element_blank(),
legend.position = c(0.815, 0.27))
p_dark +
theme(
plot.background = element_rect(fill = "grey10"),
panel.background = element_blank(),
panel.grid.major = element_line(color = "grey30", size = 0.2),
panel.grid.minor = element_line(color = "grey30", size = 0.2),
legend.background = element_blank(),
axis.ticks = element_blank(),
legend.key = element_blank(),
legend.position = c(0.815, 0.27)
)
p_dark +
theme(
plot.background = element_rect(fill = "grey10"),
panel.background = element_blank(),
panel.grid.major = element_line(color = "grey30", size = 0.2),
panel.grid.minor = element_line(color = "grey30", size = 0.2),
legend.background = element_blank(),
axis.ticks = element_blank(),
legend.position = c(0.815, 0.27)
)
p_dark +
theme(
plot.background = element_rect(fill = "grey10"),
panel.background = element_blank(),
panel.grid.major = element_line(color = "grey30", size = 0.2),
panel.grid.minor = element_line(color = "grey30", size = 0.2),
legend.background = element_blank(),
axis.ticks = element_blank(),
legend.key = element_blank(),
legend.position = c(0.815, 0.27)
)
p_dark +
theme(
plot.background = element_rect(fill = "grey10"),
panel.grid.major = element_line(color = "grey30", size = 0.2),
panel.grid.minor = element_line(color = "grey30", size = 0.2),
legend.background = element_blank(),
axis.ticks = element_blank(),
legend.key = element_blank(),
legend.position = c(0.815, 0.27)
)
p_dark +
theme(
plot.background = element_rect(fill = "grey10"),
panel.background = element_blank(),
panel.grid.major = element_line(color = "grey30", size = 0.2),
panel.grid.minor = element_line(color = "grey30", size = 0.2),
legend.background = element_blank(),
axis.ticks = element_blank(),
legend.key = element_blank(),
legend.position = c(0.815, 0.27)
)
p_dark +
theme(
plot.background = element_rect(fill = "grey10"),
panel.grid.major = element_line(color = "grey30", size = 0.2),
panel.grid.minor = element_line(color = "grey30", size = 0.2),
legend.background = element_blank(),
axis.ticks = element_blank(),
legend.key = element_blank(),
legend.position = c(0.815, 0.27)
)
p_dark +
theme(
plot.background = element_rect(fill = "grey10"),
panel.background = element_blank(),
panel.grid.major = element_line(color = "grey30", size = 0.2),
panel.grid.minor = element_line(color = "grey30", size = 0.2),
legend.background = element_blank(),
axis.ticks = element_blank(),
legend.key = element_blank(),
legend.position = c(0.815, 0.27)
)
p +
ggtitle("p + dark_theme_gray()")
p +
p + dark_theme_grey() +
ggtitle("p + dark_theme_gray()")
p +
dark_theme_grey() +
ggtitle("p + dark_theme_gray()")
mtcars2 <- within(mtcars, {
vs <- factor(vs, labels = c("V-shaped", "Straight"))
am <- factor(am, labels = c("Automatic", "Manual"))
cyl  <- factor(cyl)
gear <- factor(gear)
})
p <- ggplot(mtcars2) +
geom_point(aes(wt, mpg, color = gear)) +
facet_grid(vs ~ am) +
labs(title = "Fuel economy declines as weight increases",
subtitle = "(1973-74)",
caption = "Data from the 1974 Motor Trend US magazine.",
x = "Weight (1000 lbs)",
y = "Fuel economy (mpg)",
color = "Gears")
p +
dark_theme_grey() +
ggtitle("p + dark_theme_gray()")
p +
dark_theme_bw()+
ggtitle("p + dark_theme_gray()")
p +
theme_bw() +
ggtitle("p + theme_bw()")
p +
dark_theme_light() +
ggtitle("p + dark_theme_light()")
p +
theme_light() +
ggtitle("p + theme_light()")
p <- ggplot(diamonds_sub) +
geom_point(aes(carat, price, color = cut)) +
scale_y_continuous(label = scales::dollar) +
guides(color = guide_legend(reverse = TRUE)) +
labs(title = "Prices of 50,000 round cut diamonds by carat and cut",
x = "Weight (carats)",
y = "Price in US dollars",
color = "Quality of the cut") +
theme_gray() ## ggplot2 default
p
p + theme(panel.background = element_blank())
invert_geom_defaults()
p + theme(panel.background = element_blank())
p + theme(panel.background = element_blank()) + dark_theme_gray()
p  + dark_theme_gray()
library(tidyverse)
library(ggdark)
mtcars2
mtcars
mtcars2
ggplot(mtcars, aes(wt, mpg)) +
geom_point(aes(fill = vs), shape = 21) +
theme_fivethirtyeight()
library(ggthemes)
ggplot(mtcars, aes(wt, mpg)) +
geom_point(aes(fill = vs), shape = 21) +
theme_fivethirtyeight()
ggplot(mtcars, aes(wt, mpg)) +
geom_point(aes(color = vs), shape = 21) +
theme_fivethirtyeight()
ggplot(mtcars2, aes(wt, mpg)) +
geom_point(aes(color = vs), shape = 21) +
theme_fivethirtyeight()
ggplot(mtcars2, aes(wt, mpg)) +
geom_point(aes(fill = vs), shape = 21) +
theme_fivethirtyeight()
p
p <- ggplot(mtcars2, aes(wt, mpg)) +
geom_point(aes(fill = vs), shape = 21) +
theme_fivethirtyeight()
p
p +
dark_mode(theme_fivethirtyeight())
p +
dark_mode(theme_fivethirtyeight()) +
ggtitle("hello")
devtools::install_github("thomasp85/patchwork")
devtools::install_github("thomasp85/patchwork")
class(ggplot(mtcars))
library(patchwork)  # currently not on cran
p1 <- ggplot(mtcars) + geom_point(aes(mpg, disp))
p2 <- ggplot(mtcars) + geom_boxplot(aes(gear, disp, group = gear))
p1 + p2
ggplot(mtcars) +
geom_point(aes(mpg, disp)) +
ggplot(mtcars) +
geom_boxplot(aes(gear, disp, group = gear))
invert_geom_defaults()
ggplot(mtcars) +
geom_point(aes(mpg, disp)) +
ggplot(mtcars) +
geom_boxplot(aes(gear, disp, group = gear))
p1 <- ggplot(mtcars) + geom_point(aes(mpg, disp))
p2 <- ggplot(mtcars) + geom_boxplot(aes(gear, disp, group = gear))
p1 + p2
p1 <- ggplot(mtcars) + geom_point(aes(mpg, disp))
p2 <- ggplot(mtcars) + geom_boxplot(aes(gear, disp, group = gear))
p3 <- ggplot(mtcars) + geom_smooth(aes(disp, qsec))
p4 <- ggplot(mtcars) + geom_bar(aes(carb))
p5 <- ggplot(mtcars) + geom_violin(aes(cyl, mpg, group = cyl))
p1 + p2 + p3 + p4 + p5
p1 +
p2 +
(p3 +
p4 +
plot_layout(ncol = 1)
) +
p5
p1 +
p2 +
(p3 +
p4 +
plot_layout(ncol = 1)
) +
p5 +
plot_layout(widths = c(2, 1))
# Use byrow to change how the grid is filled out
p1 + p2 + p3 + p4 + p5 + plot_layout(byrow = FALSE)
```{r}
# Change the grid dimensions
p1 + p2 + p3 + p4 + p5 + plot_layout(ncol = 2, widths = c(1, 2))
p1 +
p2 +
(p3 +
p4 +
plot_layout(ncol = 1)
) +
p5 +
plot_layout(widths = c(2, 1))
p1 + plot_spacer() + p2
p1 + p2 + p3 + p4 + plot_annotation(title = "A great plot", caption = "Source: me",
tag_levels = "i", tag_prefix = "图")
p1 + p2 + p3 + p4 + plot_annotation(title = "A great plot", caption = "Source: me",
tag_levels = "I", tag_prefix = "Fig")
p1 + p2 + p3 + p4 + plot_annotation(title = "A great plot", caption = "Source: me",
tag_levels = "i")
p1 + p2 + p3 + p4 + plot_annotation(title = "A great plot", caption = "Source: me",
tag_levels = "i", tag_sep = "!")
p1 + p2 + p3 + p4 + plot_annotation(title = "A great plot", caption = "Source: me",
tag_levels = "i", tag_sep = "i")
p1 + p2 + p3 + p4 + plot_annotation(title = "A great plot", caption = "Source: me",
tag_levels = "i", tag_sep = "\n")
p1 + p2 + plot_annotation(title = "A great plot!", tag_levels = "A")
p1 + p2 + plot_annotation(title = "A great plot!", caption = "Source: me",
tag_levels = "i", tag_prefix = "fig", tag_sep = " ")
p1 + p2 + plot_annotation(title = "A great plot!", caption = "Source: me",
tag_levels = "i", tag_prefix = "fig", tag_sep = "!")
p1 + p2 + plot_annotation(title = "A great plot!", caption = "Source: me",
tag_levels = "i", tag_prefix = "Fig") +
theme(plot.title = element_text(face = "italic.bold"))
p1 + p2 + plot_annotation(title = "A great plot!", caption = "Source: me",
tag_levels = "i", tag_prefix = "Fig") +
theme(plot.title = element_text(face = "bold"))
p1 + p2 + plot_annotation(title = "A great plot!", caption = "Source: me",
tag_levels = "i", tag_prefix = "Fig ") +
theme(plot.title = element_text(face = "bold"))
p1 + p2 + plot_annotation(title = "A great plot!", caption = "Source: me",
tag_levels = "i", tag_prefix = "Fig ") +
dark_theme_bw()
p1 + p2 + plot_annotation(title = "A great plot!", caption = "Source: me",
tag_levels = "i", tag_prefix = "Fig ")
invert_geom_defaults()
p1 + p2 + plot_annotation(title = "A great plot!", caption = "Source: me",
tag_levels = "i", tag_prefix = "Fig ")
p1 + p2 + plot_annotation(title = "A great plot!", caption = "Source: me",
tag_levels = "i", tag_prefix = "Fig ", theme = theme_classic())
p1 + p2 - p3 + plot_layout(ncol = 1)
p1 | p2 /
p3
(p1 | p2) /
p3
p1 | p2 / p3
(p1 | p2) /
p3
(p1 | p2 | p3) /
p3
(p1 | p2 | p3) /
p4
p1 | p2 | p3 / p4  ## / 的优先级高于 |
## 最顶层元素应用 bbc_style()
p1 + (p2 + p3) + p4 + plot_layout(ncol = 1) * bbc_style()
## 最顶层元素应用 bbc_style()
p1 + (p2 + p3) + p4 + plot_layout(nrow = 2) * bbc_style()
## 最顶层元素应用 bbc_style()
p1 + (p2 + p3) + p4 + plot_layout(nrow = 2)
## 最顶层元素应用 bbc_style()
p1 + (p2 + p3) + p4 + plot_layout(nrow = 2, ncol = 2)
## 最顶层元素应用 bbc_style()
p1 + (p2 + p3) + p4 + p5 plot_layout(nrow = 2, ncol = 2)
## 最顶层元素应用 bbc_style()
p1 + (p2 + p3) + p4 + p5 + plot_layout(nrow = 2, ncol = 2)
## 最顶层元素应用 bbc_style()
p1 + (p2 + p3) + p4 + plot_layout(ncol = 1)
## 最顶层元素应用 bbc_style()
p1 + (p2 + p3) + p4 + plot_layout(ncol = 1) * bbplot::bbc_style()
## 最顶层元素应用 bbc_style()
p1 + (p2 + p3) + p4 + plot_layout(ncol = 1) * ggthemes::theme_economist()
## 最顶层元素应用 bbc_style()
p1 + (p2 + p3) + p4 + plot_layout(ncol = 1) * theme_classic()
## 最顶层元素应用 bbc_style()
p1 + (p2 + p3) + plot_layout(nrow = 2)
## 最顶层元素应用 bbc_style()
p1 + (p2 + p3) + plot_layout(nrow = 2) & theme_classic()
## 最顶层元素应用 bbc_style()
p1 + (p2 + p3) + plot_layout(nrow = 2) & bbplot::bbc_style()
p1 + (p2 + p3) + plot_layout(nrow = 2) * bbplot::bbc_style()
p1 + (p2 + p3) + plot_layout(nrow = 2) & bbplot::bbc_style()
## 最顶层元素应用 bbc_style()
(p1 + (p2 + p3) + plot_layout(nrow = 2)) * bbplot::bbc_style()
