p <- ggplot(iris, aes(Sepal.Length, Species))
p +
geom_density_ridges() +
theme_ridges()
p +
geom_density_ridges2() +
theme_ridges()
ggplot(iris, aes(Sepal.Length, Species, height = ..density..)) +
geom_density_ridges(stat = "density")
p +
geom_density_ridges(aes(fill = Species))
p +
geom_density_ridges(aes(height = ..density..),
stat = "density")
p +
geom_density_ridges()
p +
geom_density_ridges(aes(fill = species),
stat = "binline",
draw_baseline = F,
scale = 0.8)
p +
geom_density_ridges(aes(fill = Species),
stat = "binline",
draw_baseline = F,
scale = 0.8)
p +
geom_density_ridges(aes(fill = Species),
stat = "binline",
draw_baseline = F,
scale = 0.8,
color = NA)
p +
geom_density_ridges(aes(fill = Species),
stat = "binline",
draw_baseline = F,
scale = 0.8)
p +
geom_density_ridges(aes(fill = Species),
stat = "binline",
draw_baseline = F,
scale = 0.8,
alpha = 0.4)
## 以 y 为分组变量的面积图
d <- data.frame(x = rep(1:5, 3), y = c(rep(0, 5), rep(1, 5), rep(3, 5)),
height = c(0, 1, 3, 4, 0, 1, 2, 3, 5, 4, 0, 5, 4, 4, 1))
ggplot(d, aes(x, y, height = height, group = y)) +
geom_ridgeline(fill = "lightblue")
d <- data.frame(x = rep(1:5, 3), y = c(rep(0, 5), rep(1, 5), rep(3, 5)),
height = c(0, 1, 3, 4, 0, 1, 2, 3, 5, 4, 0, 5, 4, 4, 1))
ggplot(d, aes(x, y, height = height, group = y)) +
geom_density_ridges(stat = "identity", fill = "lightblue")
p +
geom_density_ridges(scale = 0.8)
p +
geom_density_ridges(scale = 2)
library(reprex)
xfun::file_string("examples\\theme_ridges.R")
grid
p +
geom_density_ridges(aes(fill = Species))
p + geom_density_ridges(aes(fill = Species)) +
theme_ridges()
p +
geom_density_ridges(aes(fill = Species))
p + geom_density_ridges(aes(fill = Species)) +
theme_ridges() +
bbplot::bbc_style()
p +
geom_density_ridges(aes(fill = Species))
p + geom_density_ridges(aes(fill = Species)) +
theme_ridges()
p +
geom_density_ridges(aes(fill = Species)) +
theme_ridges() +
scale_x_continuous(expand = c(0.01, 0)) +
scale_y_discrete(expand = c(0.01, 0))
p +
geom_density_ridges(aes(fill = Species)) +
bbc_style()
p +
geom_density_ridges(aes(fill = Species)) +
bbplot::bbc_style()
ggplot(diamonds, aes(x = price, y = cut, fill = cut)) +
geom_density_ridges() +
scale_fill_cyclical(values = c("blue", "green"))
ggplot(diamonds, aes(x = price, y = cut, fill = cut)) +
geom_density_ridges(scales = 4) +
scale_fill_cyclical(values = c("blue", "green"))
ggplot(diamonds, aes(x = price, y = cut, fill = cut)) +
geom_density_ridges(scale = 4) +
scale_fill_cyclical(values = c("blue", "green"))
## 循环标度的图例
ggplot(diamonds, aes(x = price, y = cut, fill = cut)) +
geom_density_ridges(scale = 4) +
scale_fill_cyclical(values = c("blue", "green"), guide = "legend")
ggplot(diamonds, aes(x = price, y = cut, fill = cut)) +
geom_density_ridges(scale = 4) +
scale_fill_cyclical(
values = c("blue", "green"), guide = "legend",
labels = c("Fair" = "blue", "Good" = "green"),
name = "Fill colors"
)
ggplot(diamonds, aes(price, cut,
fill = cut, color  = cut)) +
geom_density_ridges(scale = 4) +
scale_fill_cyclical(
values = c("blue", "green"), guide = "legend",
labels = c("Fair" = "blue", "Good" = "green"),
name = "Fill colors"
) +
scale_color_cyclical(
values = c("black", "yellow"), guide = "legend",
labels = c("Fair" = "blue w/ black outline", "Good" = "green w/ yellow outline"),
name = "Color scheme"
)
ggplot(diamonds, aes(x = price, y = cut, fill = cut, color = cut)) +
geom_density_ridges(scale = 4, size = 1) +
scale_fill_cyclical(
values = c("blue", "green"), guide = "legend",
labels = c("Fair" = "blue w/ black outline", "Good" = "green w/ yellow outline"),
name = "Color scheme"
) +
scale_color_cyclical(
values = c("black", "yellow"), guide = "legend",
labels = c("Fair" = "blue w/ black outline", "Good" = "green w/ yellow outline"),
name = "Color scheme"
)
ggplot(diamonds, aes(price, cut,
fill = cut, color = cut)) +
geom_density_ridges(scale = 4, size = 1) +
scale_fill_cyclical(
values = c("blue", "green"), guide = "legend",
labels = c("Fair" = "blue w/ black outline",
"Good" = "green w/ yellow outline"),
name = "Color scheme"
) +
scale_color_cyclical(
values = c("black", "yellow"), guide = "legend",
labels = c("Fair" = "blue w/ black outline",
"Good" = "green w/ yellow outline"),
name = "Color scheme"
)
diamonds %>% group_by(cut) %>% count
diamonds %>% group_by(cut) %>% tally
diamonds %>% group_by(cut) %>% add_tally()
mpg %>% group_by(class) %>% tally() %>% arrange(desc(n)) %>%
mutate(class = factor(class, levels = class)) %>%
ggplot(aes(class, n, fill = class)) +
geom_col() +
scale_fill_cyclical(values = c("#4040B0", "#9090F0")) +
scale_y_continuous(expand = c(0, 0)) +
bbplot::bbc_style()
mpg %>% group_by(class) %>% tally() %>% arrange(desc(n)) %>%
mutate(class = factor(class, levels = class)) %>%
ggplot(aes(class, n, fill = class)) +
geom_col() +
scale_fill_cyclical(values = c("#4040B0", "#9090F0")) +
scale_y_continuous(expand = c(0, 0)) +
theme_minimal()
install.packages("circlize")
install.packages("ggplot2movies")
Cata
Catalan_elections
Catalan_elections
Catalan_elections %>% group_by(Option) %>%
count()
Catalan_elections
Catalan_elections %>% count(Municipality)
Catalan_elections %>%
mutate(YearFct = fct_rev(as.factor(Year)))
Catalan_elections
Catalan_elections %>%
mutate(Year = fct_rev(as.factor(Year))) %>%
ggplot(aes(Percent, Year, fill = Option)) +
geom_density_ridges()
Catalan_elections %>%
mutate(Year = fct_rev(as.factor(Year))) %>%
ggplot(aes(Percent, Year, fill = Option)) +
geom_density_ridges(alpha = 0.2) +
theme_ridges()
Catalan_elections %>%
mutate(Year = fct_rev(as.factor(Year))) %>%
ggplot(aes(Percent, Year, fill = Option)) +
geom_density_ridges(alpha = 0.4) +
theme_ridges()
Catalan_elections %>%
mutate(Year = fct_rev(as.factor(Year))) %>%
ggplot(aes(Percent, Year, fill = Option)) +
geom_density_ridges(alpha = 0.8) +
theme_ridges()
ggplot(iris_num, aes(Sepal.Length, y = Species_num, group = Species_num)) +
geom_density_ridges()
iris_num <- iris %>%
mutate(Species_num = as.numeric(Species))
ggplot(iris_num, aes(Sepal.Length, y = Species_num, group = Species_num)) +
geom_density_ridges()
ggplot(diamonds, aes(price, cut,
fill = cut, color = cut)) +
geom_density_ridges(scale = 4, size = 1) +
scale_fill_cyclical(
values = c("blue", "green"), guide = "legend",
labels = c("Fair" = "blue w/ black outline",
"Good" = "green w/ yellow outline"),
name = "Color scheme"
) +
scale_color_cyclical(
values = c("black", "yellow"), guide = "legend",
labels = c("Fair1" = "blue w/ black outline",
"Good" = "green w/ yellow outline"),
name = "Color scheme"
)
ggplot(diamonds, aes(price, cut,
fill = cut, color = cut)) +
geom_density_ridges(scale = 4, size = 1) +
scale_fill_cyclical(
values = c("blue", "green"), guide = "legend",
labels = c("Fair" = "blue w/ black outline",
"Good" = "green w/ yellow outline"),
name = "Color scheme"
) +
scale_color_cyclical(
values = c("black", "yellow"), guide = "legend",
labels = c("Fair" = "blue w/ black outline",
"Good" = "green w/ yellow outline")
)
ggplot(diamonds, aes(price, cut,
fill = cut, color = cut)) +
geom_density_ridges(scale = 4, size = 1) +
scale_fill_cyclical(
values = c("blue", "green"), guide = "legend",
labels = c("Fair" = "blue w/ black outline",
"Good" = "green w/ yellow outline"),
name = "Color scheme"
) +
scale_color_cyclical(
values = c("black", "yellow"), guide = "legend",
labels = c("Fair" = "blue w/ black outline",
"Good" = "green w/ yellow outline")
name = "Color scheme"
ggplot(diamonds, aes(price, cut,
fill = cut, color = cut)) +
geom_density_ridges(scale = 4, size = 1) +
scale_fill_cyclical(
values = c("blue", "green"), guide = "legend",
labels = c("Fair" = "blue w/ black outline",
"Good" = "green w/ yellow outline"),
name = "Color scheme"
) +
scale_color_cyclical(
values = c("black", "yellow"), guide = "legend",
labels = c("Fair" = "blue w/ black outline",
"Good" = "green w/ yellow outline"),
name = "Color scheme"
)
install.packages("circlize")
Catalan_elections %>%
mutate(Year = fct_rev(as.factor(Year))) %>%
ggplot(aes(Percent, Year, fill = Option)) +
geom_density_ridges(alpha = 0.8) +
theme_ridges() +
labs(title = "Indy vs Unionist vote in Catalan elections",
subtitle = "Analysis unit: municipalities (n = 949)")
Catalan_elections %>%
mutate(Year = fct_rev(as.factor(Year))) %>%
ggplot(aes(Percent, Year, fill = Option)) +
geom_density_ridges(alpha = 0.8) +
theme_ridges() +
scale_fill_manual(c("#ff0000", "#0000ff")) +
labs(title = "Indy vs Unionist vote in Catalan elections",
subtitle = "Analysis unit: municipalities (n = 949)")
Catalan_elections %>%
mutate(Year = fct_rev(as.factor(Year))) %>%
ggplot(aes(Percent, Year, fill = Option)) +
geom_density_ridges(alpha = 0.8) +
theme_ridges() +
scale_fill_manual(values = c("#ff0000", "#0000ff")) +
labs(title = "Indy vs Unionist vote in Catalan elections",
subtitle = "Analysis unit: municipalities (n = 949)")
Catalan_elections %>%
mutate(Year = fct_rev(as.factor(Year))) %>%
ggplot(aes(Percent, Year, fill = Option)) +
geom_density_ridges(alpha = 0.6) +
theme_ridges() +
scale_fill_manual(values = c("#ff0000", "#0000ff")) +
labs(title = "Indy vs Unionist vote in Catalan elections",
subtitle = "Analysis unit: municipalities (n = 949)")
Catalan_elections %>%
mutate(Year = fct_rev(as.factor(Year))) %>%
ggplot(aes(Percent, Year, fill = Option)) +
geom_density_ridges(alpha = 0.6) +
theme_ridges() +
scale_fill_manual(values = c("#ff0000", "#0000ff")) +
scale_x_continuous(expand = c(0, 0)) +
scale_x_discrete(expand = c(0, 0)) +
labs(title = "Indy vs Unionist vote in Catalan elections",
subtitle = "Analysis unit: municipalities (n = 949)") +
theme(axis.title.y = element_blank())
Catalan_elections %>%
mutate(Year = fct_rev(as.factor(Year))) %>%
ggplot(aes(Percent, Year, fill = Option)) +
geom_density_ridges(alpha = 0.6) +
theme_ridges() +
scale_fill_manual(values = c("#ff0000", "#0000ff")) +
scale_x_continuous(expand = c(0.01, 0)) +
scale_x_discrete(expand = c(0, 0)) +
labs(title = "Indy vs Unionist vote in Catalan elections",
subtitle = "Analysis unit: municipalities (n = 949)") +
theme(axis.title.y = element_blank())
Catalan_elections %>%
mutate(Year = fct_rev(as.factor(Year))) %>%
ggplot(aes(Percent, Year, fill = Option)) +
geom_density_ridges(alpha = 0.6) +
theme_ridges() +
scale_fill_manual(values = c("#ff0000", "#0000ff")) +
scale_x_continuous(expand = c(0.01, 0)) +
scale_y_discrete(expand = c(0, 0)) +
labs(title = "Indy vs Unionist vote in Catalan elections",
subtitle = "Analysis unit: municipalities (n = 949)") +
theme(axis.title.y = element_blank())
ggplot(iris, aes(Sepal.Length, Species, fill = Species)) +
geom_density_ridges(aes(point_shape = Species,
point_fill = Species,
point_size = Petal.Length),
jittered_points = T,
alpha = 0.2,
point_alpha = 1) +
scale_point_color_hue(l = 40) +
scale_point_size_continuous(range = c(0.5, 4)) +
scale_discrete_manual(aesthetics = "point_shape", values = c(21, 22, 23))
install.packages("DAAG")
library(DAAG)
ais
as_tibble(ais)
ais %>% count(sport)
daata(airquality)
data("airmiles")
force(airmiles)
df <- as_tibble(DAAG::ais)
df
df$sport <- fct_recode(
"Basketball" = "B_Ball"
)
df$sport <- fct_recode(df$sport,
"Basketball" = "B_Ball"
)
df$s
df$sport
df$sport <- fct_recode(df$sport,
"Basketball" = "B_Ball",
"Track 400m" = "T_400m",
"Track Sprint" = "T_400m",
"Water Polo" = "W_Polo"
)
df <- as_tibble(DAAG::ais)
df
df$sport <- fct_recode(df$sport,
"Basketball" = "B_Ball",
"Track 400m" = "T_400m",
"Track Sprint" = "T_400m",
"Water Polo" = "W_Polo"
)
p
p <- ggplot(df, aes(ht, sport)) +
geom_density_ridges()
p
df <- as_tibble(DAAG::ais)
df
df$sport <- fct_recode(df$sport,
"Basketball" = "B_Ball",
"Track 400m" = "T_400m",
"Track Sprint" = "T_Sprint",
"Water Polo" = "W_Polo"
)
df$sport <- fct_recode(df$sport,
"Basketball" = "B_Ball",
"Track 400m" = "T_400m",
"Track Sprint" = "T_Sprnt",
"Water Polo" = "W_Polo"
)
df <- as_tibble(DAAG::ais)
df
df$sport <- fct_recode(df$sport,
"Basketball" = "B_Ball",
"Track 400m" = "T_400m",
"Track Sprint" = "T_Sprnt",
"Water Polo" = "W_Polo"
)
p <- ggplot(df, aes(ht, sport)) +
geom_density_ridges(aes(fill = sex))
p
p <- ggplot(df, aes(ht, sport))
p +
geom_density_ridges()
p +
stat_density_ridges(aes(fill = sex),
jittered_points = TRUE, point_shape = "|")
p +
stat_density_ridges(aes(fill = sex), alpha = 0.4
jittered_points = TRUE, point_shape = "|")
p +
stat_density_ridges(aes(fill = sex), alpha = 0.4,
jittered_points = TRUE, point_shape = "|")
p +
stat_density_ridges(aes(fill = sex), alpha = 0.4,
jittered_points = TRUE, point_shape = "|",
point_size = 3, size = 2.5)
p +
stat_density_ridges(aes(fill = sex), alpha = 0.4,
jittered_points = TRUE, point_shape = "|",
point_size = 3, size = 0.25)
p2 +
scale_y_discrete(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0), name = "height [cm]")
p2 <- p +
stat_density_ridges(aes(fill = sex), alpha = 0.4,
jittered_points = TRUE, point_shape = "|",
point_size = 3, size = 0.25,
position = position_points_jitter(height = 0))
p2
p2 +
scale_y_discrete(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0), name = "height [cm]")
p2 +
scale_y_discrete(expand = c(0.01, 0)) +
scale_x_continuous(expand = c(0, 0), name = "height [cm]") +
scale_fill_manual(values = c("#D55E0050", "#0072B250"), labels = c("female", "male"))
p2 <- p +
stat_density_ridges(aes(fill = sex, point_color = sex), alpha = 0.4,
jittered_points = TRUE, point_shape = "|",
point_size = 3, size = 0.25,
position = position_points_jitter(height = 0))
p2
p2 +
scale_y_discrete(expand = c(0.01, 0)) +
scale_x_continuous(expand = c(0, 0), name = "height [cm]") +
scale_fill_manual(values = c("#D55E0050", "#0072B250"), labels = c("female", "male"))
p2 +
scale_y_discrete(expand = c(0.01, 0)) +
scale_x_continuous(expand = c(0, 0), name = "height [cm]") +
scale_fill_manual(values = c("#D55E0050", "#0072B250"), labels = c("female", "male")) +
scale_discrete_manual("point_color", values = c("#D55E00", "#0072B2"), guide = "none") +
guides(fill = guide_legend(
override.aes = list(
fill = c("#D55E00A0", "#0072B2A0"),
color = NA, point_color = NA))
)
p2 +
scale_y_discrete(expand = c(0.01, 0)) +
scale_x_continuous(expand = c(0, 0), name = "height [cm]") +
scale_fill_manual(values = c("#D55E0050", "#0072B250"), labels = c("female", "male")) +
scale_discrete_manual("point_color", values = c("#D55E00", "#0072B2"), guide = "none") +
guides(fill = guide_legend(
override.aes = list(
fill = c("#D55E00A0", "#0072B2A0"),
color = NA, point_color = NA))
) +
theme_ridges()
p2 +
scale_y_discrete(expand = c(0.01, 0)) +
scale_x_continuous(expand = c(0, 0), name = "height [cm]") +
scale_fill_manual(values = c("#D55E0050", "#0072B250"), labels = c("female", "male")) +
scale_discrete_manual("point_color", values = c("#D55E00", "#0072B2"), guide = "none") +
guides(fill = guide_legend(
override.aes = list(
fill = c("#D55E00A0", "#0072B2A0"),
color = NA, point_color = NA))
) +
labs(title = "Heights of Australian Atheletes")
p2 +
scale_y_discrete(expand = c(0.01, 0)) +
scale_x_continuous(expand = c(0, 0), name = "height [cm]") +
scale_fill_manual(values = c("#D55E0050", "#0072B250"), labels = c("female", "male")) +
scale_discrete_manual("point_color", values = c("#D55E00", "#0072B2"), guide = "none") +
guides(fill = guide_legend(
override.aes = list(
fill = c("#D55E00A0", "#0072B2A0"),
color = NA, point_color = NA))
) +
labs(title = "Heights of Australian Atheletes") +
theme_ridges()
head(colors())
pdf("colors-bar.pdf", height = 120)
par(mar = c(0, 10, 3, 0) + 0.1, yaxs = "i")
barplot(rep(1, length(colors())),
col = rev(colors()), names.arg = rev(colors()), horiz = TRUE,
las = 1, xaxt = "n", main = expression("Bars of colors in" ~ italic(colors()))
)
dev.off()
df <- as_tibble(DAAG::ais)
library(tidyverse)
library(ggridges)
df <- as_tibble(DAAG::ais)
df
df$sport <- fct_recode(df$sport,
"Basketball" = "B_Ball",
"Track 400m" = "T_400m",
"Track Sprint" = "T_Sprnt",
"Water Polo" = "W_Polo"
)
p1 <- ggplot(df, aes(ht, sport))
p +
stat_density_ridges()
p2 <- p +
stat_density_ridges(aes(fill = sex, point_color = sex), alpha = 0.4,
jittered_points = TRUE, point_shape = "|",
point_size = 2, size = 0.25,
position = position_points_jitter(height = 0))
p2
df <- as_tibble(DAAG::ais)
df
sessioninfo()
