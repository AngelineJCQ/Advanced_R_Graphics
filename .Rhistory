add = "segments",                             # Add segments from y = 0 to dots
ggtheme = theme_pubr()                        # ggplot2 theme
)
ggdotchart(dfm, x = "name", y = "mpg",
color = "cyl",             # Color by groups
palette = c("#00AFBB", "#E7B800", "#FC4E07"), # Custom color palette
add = "segments",                             # Add segments from y = 0 to dots
ggtheme = theme_pubr()                        # ggplot2 theme
)
ggdotchart(dfm, x = "name", y = "mpg",
color = "cyl",                                # Color by groups
palette = c("#00AFBB", "#E7B800", "#FC4E07"), # Custom color palette
sorting = "descending",                       # Sort value in descending order
add = "segments",                             # Add segments from y = 0 to dots
rotate = TRUE,                                # Rotate vertically
group = "cyl",                                # Order by groups
dot.size = 6,                                 # Large dot size
label = round(dfm$mpg),                        # Add mpg values as dot labels
font.label = list(color = "white", size = 9,
vjust = 0.5),               # Adjust label parameters
ggtheme = theme_pubr()                        # ggplot2 theme
)
ggbarplot(dfm, x = "name", y = "mpg",
group = "cyl",               # change fill color by cyl
color = "white",            # Set bar border colors to white
palette = "jco",            # jco journal color palett. see ?ggpar
sort.val = "desc",          # Sort the value in ascending order
sort.by.groups = TRUE,      # Sort inside each group
rotate = TRUE,              # Don't sort inside each group
xlab = FALSE,
ylab = FALSE
) +
font("y.text", size = 8, face = "italic") +
font("legend.title", color = "red", face = "bold")
ggbarplot(dfm, x = "name", y = "mpg",
group = "cyl",               # change fill color by cyl
# Set bar border colors to white
palette = "jco",            # jco journal color palett. see ?ggpar
sort.val = "desc",          # Sort the value in ascending order
sort.by.groups = TRUE,      # Sort inside each group
rotate = TRUE,              # Don't sort inside each group
xlab = FALSE,
ylab = FALSE
) +
font("y.text", size = 8, face = "italic") +
font("legend.title", color = "red", face = "bold")
ggdotchart(dfm, x = "name", y = "mpg",
color = "cyl",                                # Color by groups
palette = c("#00AFBB", "#E7B800", "#FC4E07"), # Custom color palette
sorting = "descending",                       # Sort value in descending order
add = "segments",                             # Add segments from y = 0 to dots
rotate = TRUE,                                # Rotate vertically
# Order by groups
dot.size = 6,                                 # Large dot size
label = round(dfm$mpg),                        # Add mpg values as dot labels
font.label = list(color = "white", size = 9,
vjust = 0.5),               # Adjust label parameters
ggtheme = theme_pubr()                        # ggplot2 theme
)
ggdotchart(dfm, x = "name", y = "mpg",
color = "cyl",                                # Color by groups
palette = c("#00AFBB", "#E7B800", "#FC4E07"), # Custom color palette
sorting = "descending",                       # Sort value in descending order
add = "segments",                             # Add segments from y = 0 to dots
rotate = TRUE,                                # Rotate vertically
group = "cyl",                                # Order by groups
dot.size = 6,                                 # Large dot size
label = round(dfm$mpg),                        # Add mpg values as dot labels
font.label = list(color = "white", size = 9,
vjust = 0.5),               # Adjust label parameters
ggtheme = theme_pubr()                        # ggplot2 theme
)
ggdotchart(dfm, x = "name", y = "mpg",
color = "cyl",                                # Color by groups
palette = c("#00AFBB", "#E7B800", "#FC4E07"), # Custom color palette
sorting = "descending",                       # Sort value in descending order
add = "segments",                             # Add segments from y = 0 to dots
rotate = TRUE,                                # Rotate vertically
group = "cyl",                                # Order by groups
dot.size = 6,                                 # Large dot size
label = round(dfm$mpg),                        # Add mpg values as dot labels
# Adjust label parameters
ggtheme = theme_pubr()                        # ggplot2 theme
)
ggdotchart(dfm, x = "name", y = "mpg",
color = "cyl",                                # Color by groups
palette = c("#00AFBB", "#E7B800", "#FC4E07"), # Custom color palette
sorting = "descending",                       # Sort value in descending order
add = "segments",                             # Add segments from y = 0 to dots
rotate = TRUE,                                # Rotate vertically
group = "cyl",                                # Order by groups
dot.size = 6,                                 # Large dot size
label = round(dfm$mpg),                        # Add mpg values as dot labels
font.label = list(color = "white", size = 9,
vjust = 0.5),               # Adjust label parameters
ggtheme = theme_pubr()                        # ggplot2 theme
)
ggdotchart(dfm, x = "name", y = "mpg",
color = "cyl",             # Color by groups
palette = c("#00AFBB", "#E7B800", "#FC4E07"), # Custom color palette
add = "segments",                             # Add segments from y = 0 to dots
add.params = list(color = "lightgray", size = 2),
ggtheme = theme_pubr()                        # ggplot2 theme
)
ggdotchart(dfm, x = "name", y = "mpg",
color = "cyl",                                # Color by groups
palette = c("#00AFBB", "#E7B800", "#FC4E07"), # Custom color palette
sorting = "descending",                       # Sort value in descending order
add = "segments",                             # Add segments from y = 0 to dots
add.params = list(color = "lightgray", size = 2),
rotate = TRUE,                                # Rotate vertically
group = "cyl",                                # Order by groups
dot.size = 6,                                 # Large dot size
label = round(dfm$mpg),                        # Add mpg values as dot labels
font.label = list(color = "white", size = 9,
vjust = 0.5),               # Adjust label parameters
ggtheme = theme_pubr()                        # ggplot2 theme
)
ggbarplot(dfm, x = "name", y = "mpg",
fill = "cyl",               # change fill color by cyl
color = "white",            # Set bar border colors to white
palette = "jco",            # jco journal color palett. see ?ggpar
sort.val = "desc",          # Sort the value in ascending order
sort.by.groups = TRUE,      # Sort inside each group
rotate = TRUE,              # Don't sort inside each group
xlab = FALSE,
ylab = FALSE
) +
font("y.text", size = 8, face = "italic") +
font("legend.title", color = "red", face = "bold")
ggdotchart(dfm, x = "name", y = "mpg",
color = "cyl",                                # Color by groups
palette = c("#00AFBB", "#E7B800", "#FC4E07"), # Custom color palette
sorting = "descending",                       # Sort value in descending order
add = "segments",                             # Add segments from y = 0 to dots
add.params = list(color = "lightgray", size = 2),
rotate = TRUE,                                # Rotate vertically
group = "cyl",                                # Order by groups
dot.size = 6,                                 # Large dot size
label = round(dfm$mpg),                        # Add mpg values as dot labels
font.label = list(color = "white", size = 9,
vjust = 0.5),               # Adjust label parameters
y.text.col = "cyl"
ggtheme = theme_pubr()                        # ggplot2 theme
ggdotchart(dfm, x = "name", y = "mpg",
color = "cyl",                                # Color by groups
palette = c("#00AFBB", "#E7B800", "#FC4E07"), # Custom color palette
sorting = "descending",                       # Sort value in descending order
add = "segments",                             # Add segments from y = 0 to dots
add.params = list(color = "lightgray", size = 2),
rotate = TRUE,                                # Rotate vertically
group = "cyl",                                # Order by groups
dot.size = 6,                                 # Large dot size
label = round(dfm$mpg),                        # Add mpg values as dot labels
font.label = list(color = "white", size = 9,
vjust = 0.5),               # Adjust label parameters
y.text.col = "cyl",
ggtheme = theme_pubr()                        # ggplot2 theme
)
ggdotchart(dfm, x = "name", y = "mpg",
color = "cyl",                                # Color by groups
palette = c("#00AFBB", "#E7B800", "#FC4E07"), # Custom color palette
sorting = "descending",                       # Sort value in descending order
add = "segments",                             # Add segments from y = 0 to dots
add.params = list(color = "lightgray", size = 2),
rotate = TRUE,                                # Rotate vertically
group = "cyl",                                # Order by groups
dot.size = 6,                                 # Large dot size
label = round(dfm$mpg),                        # Add mpg values as dot labels
font.label = list(color = "white", size = 9,
vjust = 0.5),               # Adjust label parameters
y.text.col = TRUE
ggtheme = theme_pubr()                        # ggplot2 theme
ggdotchart(dfm, x = "name", y = "mpg",
color = "cyl",                                # Color by groups
palette = c("#00AFBB", "#E7B800", "#FC4E07"), # Custom color palette
sorting = "descending",                       # Sort value in descending order
add = "segments",                             # Add segments from y = 0 to dots
add.params = list(color = "lightgray", size = 2),
rotate = TRUE,                                # Rotate vertically
group = "cyl",                                # Order by groups
dot.size = 6,                                 # Large dot size
label = round(dfm$mpg),                        # Add mpg values as dot labels
font.label = list(color = "white", size = 9,
vjust = 0.5),               # Adjust label parameters
y.text.col = TRUE,
ggtheme = theme_pubr()                        # ggplot2 theme
)
ggdotchart(dfm, x = "name", y = "mpg",
color = "cyl",             # Color by groups
palette = c("#00AFBB", "#E7B800", "#FC4E07"), # Custom color palette
add = "segments",                             # Add segments from y = 0 to dots
add.params = list(color = "lightgray", size = 2),
ggtheme = theme_cleveland()                        # ggplot2 theme
)
ggdotchart(dfm, x = "name", y = "mpg",
color = "cyl",             # Color by groups
palette = c("#00AFBB", "#E7B800", "#FC4E07"), # Custom color palette
add = "segments",                             # Add segments from y = 0 to dots
add.params = list(color = "lightgray", size = 2),
ggtheme = theme_pubr()                        # ggplot2 theme
)
ggdotchart(dfm, x = "name", y = "mpg",
color = "cyl",                                # Color by groups
palette = c("#00AFBB", "#E7B800", "#FC4E07"), # Custom color palette
sorting = "descending",                       # Sort value in descending order
rotate = TRUE,                                # Rotate vertically
dot.size = 2,                                 # Large dot size
y.text.col = TRUE,                            # Color y text by groups
ggtheme = theme_pubr()                        # ggplot2 theme
)+
theme_cleveland()                                      # Add dashed grids
ggdotchart(dfm, x = "name", y = "mpg",
color = "cyl",                                # Color by groups
palette = c("#00AFBB", "#E7B800", "#FC4E07"), # Custom color palette
sorting = "descending",                       # Sort value in descending order
rotate = TRUE,                                # Rotate vertically
dot.size = 2,                                 # Large dot size
y.text.col = TRUE,                            # Color y text by groups
ggtheme = theme_pubr()                        # ggplot2 theme
) +
theme_cleveland()                                      # Add dashed grids
ggdotchart(dfm, x = "name", y = "mpg",
color = "cyl",                                # Color by groups
palette = c("#00AFBB", "#E7B800", "#FC4E07"), # Custom color palette
sorting = "descending",                       # Sort value in descending order
rotate = TRUE,                                # Rotate vertically
dot.size = 2,                                 # Large dot size
y.text.col = TRUE,                            # Color y text by groups
ggtheme = theme_pubr()                        # ggplot2 theme
) +
theme_cleveland() + # Add dashed grids +
font("y.text", size = 4, face = "italic")
ggdotchart(dfm, x = "name", y = "mpg",
color = "cyl",                                # Color by groups
palette = c("#00AFBB", "#E7B800", "#FC4E07"), # Custom color palette
sorting = "descending",                       # Sort value in descending order
rotate = TRUE,                                # Rotate vertically
dot.size = 2,                                 # Large dot size
y.text.col = TRUE,                            # Color y text by groups
ggtheme = theme_pubr()                        # ggplot2 theme
) +
theme_cleveland() + # Add dashed grids +
font("y.text", size = 8, face = "italic")
ggdotchart(dfm, x = "name", y = "mpg",
color = "cyl",                                # Color by groups
palette = c("#00AFBB", "#E7B800", "#FC4E07"), # Custom color palette
sorting = "descending",                       # Sort value in descending order
rotate = TRUE,                                # Rotate vertically
dot.size = 2,                                 # Large dot size
y.text.col = TRUE,                            # Color y text by groups
ggtheme = theme_pubr()                        # ggplot2 theme
) +
theme_cleveland() + # Add dashed grids +
font("y.text", size = 8, face = "italic")
p <- ggscatterhist(
data = data,
x = "x",
y = "y",
shape = 21,
color = "black",
fill = "class",
palette = c("#00AFBB", "#E7B800", "#FC4E07"),
margin.plot = "density",
margin.params = list(alpha = 0.5, fill = "class", color = "black"),
ggtheme = theme_minimal()，
xlab = FALSE,  ## 取消标签
ylab = FALSE,
title = "A scatterhist plot"
)
class(p)
ggarrange()
ggarange
ggarrange
# NOT RUN {
data("ToothGrowth")
df <- ToothGrowth
df$dose <- as.factor(df$dose)
# Create some plots
# ::::::::::::::::::::::::::::::::::::::::::::::::::
# Box plot
bxp <- ggboxplot(df, x = "dose", y = "len",
color = "dose", palette = "jco")
# Dot plot
dp <- ggdotplot(df, x = "dose", y = "len",
color = "dose", palette = "jco")
# Density plot
dens <- ggdensity(df, x = "len", fill = "dose", palette = "jco")
# Arrange
# ::::::::::::::::::::::::::::::::::::::::::::::::::
ggarrange(bxp, dp, dens, ncol = 2, nrow = 2)
# Use a common legend for multiple plots
ggarrange(bxp, dp,  common.legend = TRUE)
# }
# Use a common legend for multiple plots
ggarrange(bxp, dp,  common.legend = TRUE)
# Arrange
ggarrange(bxp, dp, dens, ncol = 2, nrow = 2)
# Arrange
ggarrange(bxp, dp, NUll, dens, ncol = 2, nrow = 2)
# Arrange
ggarrange(bxp, dp, NULL, dens, ncol = 2, nrow = 2)
ggarrange(bxp, dp, NULL, dens,
ncol = 2, nrow = 2，
common.legend = TRUE)
ggarrange(bxp, dp,
ncol = 2,
common.legend = TRUE)
# Arrange
ggarrange(bxp, dp, NULL, dens,
ncol = 2, nrow = 2,
labels = c("one", "two", "three", "four"))
palette()
## 降序  sort.val = "desc"
ggbarplot(dfm, x = "name", y = "mpg",
fill = "cyl",               # change fill color by cyl
color = "white",            # Set bar border colors to white
palette = "jco",            # jco journal color palett. see ?ggpar
sort.val = "desc",          # Sort the value in ascending order
x.text.angle = 90           # Rotate vertically x axis texts
)
library(tidyverse)
library(ggpubr)
## 简单散点图
ggscatter(df, x = "wt",
y = "mpg",
color = "cyl")
df <- mtcars
df$cyl <- as.factor(df$cyl)
## 简单散点图
ggscatter(df, x = "wt",
y = "mpg",
color = "cyl")
ggscatter(df, x = "wt", y = "mpg",
color = "black", shape = 21, size = 3, # Points color, shape and size
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
cor.coeff.args = list(method = "pearson", label.x = 3, label.sep = "\n")
)
ggscatter(df, x = "wt", y = "mpg",
color = "black", shape = 21, size = 3, # Points color, shape and size
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
cor.coeff.args = list(method = "pearson", label.x.npc = "right", label.sep = "\n", label.y.npc = "top")
)
ggscatter(df, x = "wt", y = "mpg",
color = "black", shape = 21, size = 3, # Points color, shape and size
add = "reg.line",  # Add regressin line
add.params = list(color = "blue", fill = "lightgray"), # Customize reg. line
conf.int = TRUE, # Add confidence interval
cor.coef = TRUE, # Add correlation coefficient. see ?stat_cor
cor.coeff.args = list(method = "pearson", label.x = 3, label.sep = "\n")
)
ggscatter(
df,
x = "wt",
y = "mpg",
color = "black", shape = 21, size = 3,
add = "lowess",
add.params = list(color = "blue"),
conf.int = TRUE,
conf.int.level = 0.95
)
ggscatter(
df,
x = "wt",
y = "mpg",
color = "black", shape = 21, size = 3,
add = "loess",
add.params = list(color = "blue"),
conf.int = TRUE,
conf.int.level = 0.95
)
ggscatter(
df,
x = "wt",
y = "mpg",
color = "black", shape = 21, size = 3,
add = "loess",
add.params = list(color = "blue"),
conf.int = TRUE,
conf.int.level = 0.95
) +
bbplot::bbc_style()
ggscatter(
df,
x = "wt",
y = "mpg",
color = "black", shape = 21, size = 3,
add = "loess",
add.params = list(color = "blue"),
conf.int = TRUE,
conf.int.level = 0.95
)
ggscatter(
df,
x = "wt",
y = "mpg",
color = "black", shape = 21, size = 3,
add = "loess",
add.params = list(color = "blue"),
conf.int = TRUE,
conf.int.level = 0.9
)
## 创造数据
set.seed(20191011)
x1 <- rnorm(200, 1.5, 0.5)
y1 <- rnorm(200, 2, 0.2)
x2 <- rnorm(200, 2.5, 0.5)
y2 <- rnorm(200, 2.5, 0.5)
x3 <- rnorm(200, 1, 0.3)
y3 <- rnorm(200, 1.5, 0.2)
data <- tibble(x = c(x1, x2, x3),
y = c(y1, y2, y3),
class = rep(c("A", "B", "C"), each = 200))
## 绘图
ggscatterhist(
data = data,
x = "x",
y = "y",
shape = 21,
color = "black",
fill = "class",
palette = c("#00AFBB", "#E7B800", "#FC4E07")
)
ggscatterhist(
data = data,
x = "x",
y = "y",
shape = 21,
color = "black",
fill = "class",
palette = c("#00AFBB", "#E7B800", "#FC4E07"),
margin.plot = "boxplot",
margin.params = list(alpha = 0.5, fill = "class", color = "black"),
ggtheme = theme_minimal()，
)
ggscatterhist(
data = data,
x = "x",
y = "y",
shape = 21,
color = "black",
fill = "class",
palette = c("#00AFBB", "#E7B800", "#FC4E07"),
margin.plot = "boxplot",
margin.params = list(alpha = 0.5, fill = "class", color = "black"),
ggtheme = theme_minimal()，
xlab = FALSE,  ## 取消标签
ylab = FALSE,
title = "A scatterhist plot"
)
library(tidyverse)
df <- read_csv("data/Slopecharts_Data1.csv")
df
ggplot(df) +
geom_segment(x = 1, y = `1970`,
xend = 2, y = `1979`)
ggplot(df) +
geom_segment(x = 1, y = `1970`,
xend = 2, yend = `1979`)
ggplot(df) +
geom_segment(aes(x = 1, y = `1970`,
xend = 2, yend = `1979`))
library(ggalt)
ggplot(df) +
geom_segment(aes(x = 1, y = `1970`,
xend = 2, yend = `1979`)) +
geom_vline(xintercept = 1, linetype = "solid", size = 0.1)
library(ggalt)
ggplot(df) +
geom_segment(aes(x = 1, y = `1970`,
xend = 2, yend = `1979`)) +
geom_vline(xintercept = 1, linetype = "solid", size = 0.1) +
geom_vline(xintercept = 2, linetype = "solid", size = 0.1) +
geom_point(aes(1, `1970`))
library(ggalt)
ggplot(df) +
geom_segment(aes(x = 1, y = `1970`,
xend = 2, yend = `1979`)) +
geom_vline(xintercept = 1, linetype = "solid", size = 0.1) +
geom_vline(xintercept = 2, linetype = "solid", size = 0.1) +
geom_point(aes(1, `1970`)) +
geom_point(aes(2, `1979`))
library(ggalt)
ggplot(df) +
geom_xspline(aes(x = 1, y = `1970`,
xend = 2, yend = `1979`)) +
geom_vline(xintercept = 1, linetype = "solid", size = 0.1) +
geom_vline(xintercept = 2, linetype = "solid", size = 0.1) +
geom_point(aes(1, `1970`)) +
geom_point(aes(2, `1979`)) +
library(ggalt)
ggplot(df) +
geom_xspline(aes(x = 1, y = `1970`,
xend = 2, yend = `1979`)) +
geom_vline(xintercept = 1, linetype = "solid", size = 0.1) +
geom_vline(xintercept = 2, linetype = "solid", size = 0.1) +
geom_point(aes(1, `1970`)) +
geom_point(aes(2, `1979`))
library(ggalt)
ggplot(df) +
geom_xspline(aes(x = 1, y = `1970`,
xend = 2, yend = `1979`), size = 0.75) +
geom_vline(xintercept = 1, linetype = "solid", size = 0.1) +
geom_vline(xintercept = 2, linetype = "solid", size = 0.1) +
geom_point(aes(1, `1970`)) +
geom_point(aes(2, `1979`))
